{"version":3,"sources":["webpack:///D:/working/舒服康/uni_modules/almost-lottery/components/almost-lottery/almost-lottery.vue?7312","webpack:///D:/working/舒服康/uni_modules/almost-lottery/components/almost-lottery/almost-lottery.vue?917b","webpack:///D:/working/舒服康/uni_modules/almost-lottery/components/almost-lottery/almost-lottery.vue?5d62","webpack:///D:/working/舒服康/uni_modules/almost-lottery/components/almost-lottery/almost-lottery.vue?cb6c","uni-app:///uni_modules/almost-lottery/components/almost-lottery/almost-lottery.vue","webpack:///D:/working/舒服康/uni_modules/almost-lottery/components/almost-lottery/almost-lottery.vue?96b2"],"names":["renderjs","component","options","__file","components","render","_vm","this","_h","$createElement","_self","_c","recyclableRender","staticRenderFns","_withStripped","name","props","canvasId","type","default","canvasWidth","canvasHeight","outerWidth","outerHeight","canvasMargin","actionWidth","actionHeight","prizeList","required","validator","prizeIndex","colors","lotteryBg","actionBg","prizeNameDrawed","stroked","strokeColor","rotateType","duration","ringCount","pointerPosition","strDirection","strFontColor","strFontSize","strMarginOutside","imgMarginStr","strLineHeight","strKey","strMaxLen","strLineLen","imgWidth","imgHeight","successMsg","failMsg","canvasCached","data","className","lotteryImg","targetAngle","targetActionAngle","transitionDuration","isRotate","stayIndex","targetIndex","isCacheImg","oldLotteryImg","almostLotteryTip","measureText","computed","higtCanvasSize","higtFontSize","higtHeightMultiple","higtCanvasMargin","canvasAngle","result","actionAngle","outsideRadius","insideRadius","textRadius","textDistance","watch","console","methods","onRotateStart","angles","clearTimeout","endTimer","resetPrizeTimer","handleActionStart","onCreateCanvas","ctx","canvasW","canvasH","prizeCount","baseAngle","i","prizeItem","angle","translateX","translateY","rewardName","realLen","isLineBreak","firstText","lastText","firstCount","rewardNames","j","tempStrSize","tempStrWidth","textWidth","reg","platformTips","res","tempFilePath","ok","msg","prizeImageX","prizeImageY","prizeImageW","prizeImageH","drawTimer","uni","success","fail","handlePrizeImg","cached","handlePrizeImgSuc","getTextWidth","nodesRef","size","resolve","strLimit","checkCacheImg","initCanvasDraw","mounted","stoTimer"],"mappings":"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C,+BAAA,SAQAoC,6BACAC,8BACAC,0BACAC,2BACA9B,6BAAA,SAGAA,YAAA,SAxLAK,IAAA,wBA4LAL,sBACA,6BACAL,gBACAoC,OAyBAC,wBACAzG,oBACA0G,oBAGA,kBACAR,MACA5D,oBACA6D,oBAGAQ,iBACA,kBACAT,MACA5D,OACA6D,qBAGA,KAEA,QACA,4CA/PA,IAkQAS,2BAAA,WACA,SACA,aAEA,sBAGA,OAFA,uBACA,0BAKA,gBACAH,oBACAC,oBACA,iBAGA,KAEA,YACA,4BACA,WACA,mBACAG,KACA,eAEA7C,2CACA,uBACA,OAKA,IACAA,8CACA,qBAGA2C,iBACA,sBAIAF,YACAR,eACAS,oBACA,uBAEA,oDACA,eACA,qBACAR,MACA5D,OACA6D,oBAGAQ,iBACA,kBACAT,MACA5D,OACA6D,2BAgBAnC,6BACAyC,gBAKAzC,gDAKA8C,8BACAL,gBACA,qBACAP,QACA5D,YACA6D,wCAEA,yDAKAY,wBACA/C,qFACA,uCACA,2CACA,kCACAgD,UACAC,UACA,YACAC,cACA,WAIAC,qBACA,qBACA,cACA,kDADA,GAIAC,yBACApD,8BAGA,yEACA,2DACA,iCACA,uBACA,MAUA,OATAA,4DACA,mBAEAA,oCACA,qBACAkC,MACA5D,wBACA6D,mBAMAnC,8BACA,uBAGAqD,0BACArD,yBACA,mBACA,oBACA,wDACA,mEACA,wBAGAsD,mBAAA,WACA,2BACA,6BACAlD,gBACAmD,OAEA,eACA,kBAEA,mBAEA,kCACA,SAGA,c,8DC90BA,0HAAovC,eAAG,G","file":"uni_modules/almost-lottery/components/almost-lottery/almost-lottery.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./almost-lottery.vue?vue&type=template&id=34b92f46&scoped=true&\"\nvar renderjs\nimport script from \"./almost-lottery.vue?vue&type=script&lang=js&\"\nexport * from \"./almost-lottery.vue?vue&type=script&lang=js&\"\nimport style0 from \"./almost-lottery.vue?vue&type=style&index=0&id=34b92f46&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"34b92f46\",\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"uni_modules/almost-lottery/components/almost-lottery/almost-lottery.vue\"\nexport default component.exports","export * from \"-!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./almost-lottery.vue?vue&type=template&id=34b92f46&scoped=true&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./almost-lottery.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./almost-lottery.vue?vue&type=script&lang=js&\"","<template>\r\n  <view class=\"almost-lottery\">\r\n    <view class=\"almost-lottery__wrap\"\r\n      :style=\"{\r\n        width: outerWidth + higtCanvasMargin + 'px',\r\n        height: outerWidth + higtCanvasMargin + 'px'\r\n      }\"\r\n      v-if=\"lotteryImg\"\r\n    >\r\n      <image\r\n        class=\"almost-lottery__bg\"\r\n        mode=\"widthFix\"\r\n        :src=\"lotteryBg\"\r\n        :style=\"{\r\n          width: outerWidth + higtCanvasMargin + 'px',\r\n          height: outerWidth + higtCanvasMargin + 'px'\r\n        }\"\r\n      ></image>\r\n      <image\r\n        class=\"almost-lottery__canvas-img\"\r\n        mode=\"widthFix\"\r\n        :src=\"lotteryImg\"\r\n        :style=\"{\r\n          width: canvasWidth + 'px',\r\n          height: canvasWidth  + 'px',\r\n          transform: `rotate(${canvasAngle + targetAngle}deg)`,\r\n          transitionDuration: `${transitionDuration}s`\r\n        }\"\r\n      ></image>\r\n      <image\r\n        class=\"almost-lottery__action almost-lottery__action-bg\"\r\n        mode=\"widthFix\"\r\n        :src=\"actionBg\"\r\n        :style=\"{\r\n          width: actionWidth + 'px',\r\n          height: actionHeight + 'px',\r\n          transform: `rotate(${actionAngle + targetActionAngle}deg)`,\r\n          transitionDuration: `${transitionDuration}s`\r\n        }\"\r\n        @click=\"handleActionStart\"\r\n      ></image>\r\n    </view>\r\n    \r\n    <!-- 正在绘制转盘时的提示文本 -->\r\n    <text class=\"almost-lottery__tip\" v-else>{{ almostLotteryTip }}</text>\r\n    \r\n    <!-- 为了兼容 app 端 ctx.measureText 所需的标签 -->\r\n    <text class=\"almost-lottery__measureText\" :style=\"{ fontSize: higtFontSize + 'px' }\">{{ measureText }}</text>\r\n    \r\n    <!-- #ifdef MP-ALIPAY -->\r\n    <canvas \r\n      :class=\"className\"\r\n      :id=\"canvasId\"\r\n      :width=\"higtCanvasSize\"\r\n      :height=\"higtCanvasSize\"\r\n      :style=\"{\r\n        width: higtCanvasSize + 'px',\r\n        height: higtCanvasSize + 'px'\r\n      }\"\r\n    />\r\n    <!-- #endif -->\r\n    <!-- #ifndef MP-ALIPAY -->\r\n    <canvas\r\n      :class=\"className\"\r\n      :canvas-id=\"canvasId\"\r\n      :width=\"higtCanvasSize\"\r\n      :height=\"higtCanvasSize\"\r\n      :style=\"{\r\n        width: higtCanvasSize + 'px',\r\n        height: higtCanvasSize + 'px'\r\n      }\"\r\n    />\r\n    <!-- #endif -->\r\n  </view>\r\n</template>\r\n\r\n<script>\r\n  const systemInfo = uni.getSystemInfoSync()\r\n\timport { getStore, setStore, clearStore, clacTextLen, downloadFile, pathToBase64 } from '@/uni_modules/almost-lottery/utils/almost-utils.js'\r\n  export default {\r\n    name: 'AlmostLottery',\r\n    props: {\r\n      // canvas 宽度\r\n      canvasId: {\r\n        type: String,\r\n        default: 'almostLotteryCanvas'\r\n      },\r\n      // canvas 宽度\r\n      canvasWidth: {\r\n        type: Number,\r\n        default: 242\r\n      },\r\n      // canvas 高度\r\n      canvasHeight: {\r\n        type: Number,\r\n        default: 242,\r\n      },\r\n      // 转盘外圈的宽度\r\n      outerWidth: {\r\n        type: Number,\r\n        default: 267\r\n      },\r\n      // 转盘外圈的高度\r\n      outerHeight: {\r\n        type: Number,\r\n        default: 267\r\n      },\r\n\t\t\t// 内圈与外圈的间距\r\n\t\t\tcanvasMargin: {\r\n        type: Number,\r\n        default: 0\r\n      },\r\n      // 抽奖按钮的宽度\r\n      actionWidth: {\r\n        type: Number,\r\n        default: 120\r\n      },\r\n      // 抽奖按钮的高度\r\n      actionHeight: {\r\n        type: Number,\r\n        default: 120\r\n      },\r\n      // 奖品列表\r\n      prizeList: {\r\n        type: Array,\r\n        required: true,\r\n        validator: (value) => {\r\n          return value.length > 1\r\n        }\r\n      },\r\n      // 中奖奖品在列表中的下标\r\n      prizeIndex: {\r\n        type: Number,\r\n        required: true\r\n      },\r\n      // 奖品区块对应背景颜色\r\n      colors: {\r\n        type: Array,\r\n        default: () => [\r\n          '#fbe7bb',\r\n          '#fcd68c'\r\n        ]\r\n      },\r\n      // 转盘外环背景图\r\n      lotteryBg: {\r\n        type: String,\r\n        default: '/uni_modules/almost-lottery/static/almost-lottery/almost-lottery__bg2x.png'\r\n      },\r\n      // 抽奖按钮背景图\r\n      actionBg: {\r\n        type: String,\r\n        default: '/uni_modules/almost-lottery/static/almost-lottery/almost-lottery__action2x.png'\r\n      },\r\n      // 是否绘制奖品名称\r\n      prizeNameDrawed: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: true\r\n      },\r\n      // 是否开启奖品区块描边\r\n      stroked: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: false\r\n\t\t\t},\r\n      // 描边颜色\r\n      strokeColor: {\r\n        type: String,\r\n        default: '#FFE9AA'\r\n      },\r\n      // 旋转的类型\r\n      rotateType: {\r\n        type: String,\r\n        default: 'roulette'\r\n      },\r\n      // 旋转动画时间 单位s\r\n      duration: {\r\n        type: Number,\r\n        default: 8\r\n      },\r\n      // 旋转的圈数\r\n      ringCount: {\r\n        type: Number,\r\n        default: 8\r\n      },\r\n      // 指针位置\r\n      pointerPosition: {\r\n        type: String,\r\n        default: 'edge',\r\n        validator: (value) => {\r\n          return value === 'edge' || value === 'middle'\r\n        }\r\n      },\r\n      // 文字方向\r\n      strDirection: {\r\n        type: String,\r\n        default: 'horizontal'\r\n      },\r\n      // 字体颜色\r\n      strFontColor: {\r\n        type: String,\r\n        default: '#A62A2A'\r\n      },\r\n      // 文字的大小\r\n      strFontSize: {\r\n        type: Number,\r\n        default: 9\r\n      },\r\n      // 奖品文字距离边缘的距离\r\n      strMarginOutside: {\r\n        type: Number,\r\n        default: 0\r\n      },\r\n      // 奖品图片距离奖品文字的距离\r\n      imgMarginStr: {\r\n        type: Number,\r\n        default: 25\r\n      },\r\n      // 奖品文字多行情况下的行高\r\n      strLineHeight: {\r\n        type: Number,\r\n        default: 1.2\r\n      },\r\n      // 奖品名称所对应的 key 值\r\n      strKey: {\r\n        type: String,\r\n        default: 'name'\r\n      },\r\n      // 奖品文字总长度限制\r\n      strMaxLen: {\r\n        type: Number,\r\n        default: 12\r\n      },\r\n      // 奖品文字多行情况下第一行文字长度\r\n      strLineLen: {\r\n        type: Number,\r\n        default: 6\r\n      },\r\n      // 奖品图片的宽\r\n      imgWidth: {\r\n        type: Number,\r\n        default: 30\r\n      },\r\n      // 奖品图片的高\r\n      imgHeight: {\r\n        type: Number,\r\n        default: 30\r\n      },\r\n\t\t\t// 转盘绘制成功的提示\r\n\t\t\tsuccessMsg: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: '奖品准备就绪，快来参与抽奖吧'\r\n\t\t\t},\r\n\t\t\t// 转盘绘制失败的提示\r\n\t\t\tfailMsg: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: '奖品仍在准备中，请稍后再来...'\r\n\t\t\t},\r\n\t\t\t// 是否开启画板的缓存\r\n\t\t\tcanvasCached: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: false\r\n\t\t\t}\r\n    },\r\n    data() {\r\n      return {\r\n        // 画板className\r\n        className: 'almost-lottery__canvas',\r\n        // 画板导出的图片\r\n        lotteryImg: '',\r\n        // 旋转到奖品目标需要的角度\r\n        targetAngle: 0,\r\n        targetActionAngle: 0,\r\n        // 旋转动画时间 单位 s\r\n        transitionDuration: 0,\r\n        // 是否正在旋转\r\n        isRotate: false,\r\n        // 当前停留在那个奖品的序号\r\n        stayIndex: 0,\r\n        // 当前中奖奖品的序号\r\n        targetIndex: 0,\r\n\t\t\t\t// 是否存在可用的缓存转盘图\r\n\t\t\t\tisCacheImg: false,\r\n\t\t\t\toldLotteryImg: '',\r\n        // 转盘绘制时的提示\r\n        almostLotteryTip: '奖品准备中...',\r\n        // 解决 app 不支持 measureText 的问题\r\n\t\t\t\t// app 已在 2.9.3 的版本中提供了对 measureText 的支持，将在后续版本逐渐稳定后移除相关兼容代码\r\n        measureText: ''\r\n      }\r\n    },\r\n    computed: {\r\n      // 高清尺寸\r\n      higtCanvasSize() {\r\n        return this.canvasWidth * systemInfo.pixelRatio\r\n      },\r\n      // 高清字体\r\n      higtFontSize() {\r\n        return this.strFontSize * systemInfo.pixelRatio\r\n      },\r\n      // 高清行高\r\n      higtHeightMultiple() {\r\n        return this.strFontSize * this.strLineHeight * systemInfo.pixelRatio\r\n      },\r\n      // 高清内外圈间距\r\n      higtCanvasMargin() {\r\n        return this.canvasMargin * systemInfo.pixelRatio\r\n      },\r\n      // 根据奖品列表计算 canvas 旋转角度\r\n      canvasAngle() {\r\n        let result = 0\r\n        \r\n        let prizeCount = this.prizeList.length\r\n        let prizeClip = 360 / prizeCount\r\n        let diffNum = 90 / prizeClip\r\n        if (this.pointerPosition === 'edge' || this.rotateType === 'pointer') {\r\n          result = -(prizeClip * diffNum)\r\n        } else {\r\n          result = -(prizeClip * diffNum + prizeClip / 2)\r\n        }\r\n        return result\r\n      },\r\n      actionAngle() {\r\n        return 0\r\n      },\r\n      // 外圆的半径\r\n      outsideRadius() {\r\n        return this.higtCanvasSize / 2\r\n      },\r\n      // 内圆的半径\r\n      insideRadius() {\r\n        return 20 * systemInfo.pixelRatio\r\n      },\r\n      // 文字距离边缘的距离\r\n      textRadius() {\r\n        return this.strMarginOutside * systemInfo.pixelRatio || (this.higtFontSize / 2)\r\n      },\r\n      // 根据画板的宽度计算奖品文字与中心点的距离\r\n      textDistance() {\r\n        const textZeroY = Math.round(this.outsideRadius - (this.insideRadius / 2))\r\n        return textZeroY - this.textRadius\r\n      }\r\n    },\r\n    watch: {\r\n      // 监听获奖序号的变动\r\n      prizeIndex(newVal, oldVal) {\r\n        if (newVal > -1) {\r\n          this.targetIndex = newVal\r\n          this.onRotateStart()\r\n        } else {\r\n          console.info('旋转结束，prizeIndex 已重置')\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      // 开始旋转\r\n      onRotateStart() {\r\n        if (this.isRotate) return\r\n        this.isRotate = true\r\n        // 奖品总数\r\n        let prizeCount = this.prizeList.length\r\n        let baseAngle = 360 / prizeCount\r\n        let angles = 0\r\n        \r\n        if (this.rotateType === 'pointer') {\r\n          if (this.targetActionAngle === 0) {\r\n            // 第一次旋转\r\n            angles = (this.targetIndex - this.stayIndex) * baseAngle + baseAngle / 2 - this.actionAngle\r\n          } else {\r\n            // 后续旋转\r\n            // 后续继续旋转 就只需要计算停留的位置与目标位置的角度\r\n            angles = (this.targetIndex - this.stayIndex) * baseAngle\r\n          }\r\n          \r\n          // 更新目前序号\r\n          this.stayIndex = this.targetIndex\r\n          // 转 8 圈，圈数越多，转的越快\r\n          this.targetActionAngle += angles + 360 * this.ringCount\r\n          console.log('targetActionAngle', this.targetActionAngle)\r\n        } else {\r\n          if (this.targetAngle === 0) {\r\n            // 第一次旋转\r\n            // 因为第一个奖品是从0°开始的，即水平向右方向\r\n            // 第一次旋转角度 = 270度 - (停留的序号-目标序号) * 每个奖品区间角度 - 每个奖品区间角度的一半 - canvas自身旋转的度数\r\n            angles = (270 - (this.targetIndex - this.stayIndex) * baseAngle - baseAngle / 2) - this.canvasAngle\r\n          } else {\r\n            // 后续旋转\r\n            // 后续继续旋转 就只需要计算停留的位置与目标位置的角度\r\n            angles = -(this.targetIndex - this.stayIndex) * baseAngle\r\n          }\r\n          \r\n          // 更新目前序号\r\n          this.stayIndex = this.targetIndex\r\n          // 转 8 圈，圈数越多，转的越快\r\n          this.targetAngle += angles + 360 * this.ringCount\r\n        }\r\n\r\n        // 计算转盘结束的时间，预加一些延迟确保转盘停止后触发结束事件\r\n        let endTime = this.transitionDuration * 1000 + 100\r\n        let endTimer = setTimeout(() => {\r\n          clearTimeout(endTimer)\r\n          endTimer = null\r\n\r\n          this.isRotate = false\r\n          this.$emit('draw-end')\r\n        }, endTime)\r\n\r\n        let resetPrizeTimer = setTimeout(() => {\r\n          clearTimeout(resetPrizeTimer)\r\n          resetPrizeTimer = null\r\n\r\n          // 每次抽奖结束后都要重置父级组件的 prizeIndex\r\n          this.$emit('reset-index')\r\n        }, endTime + 50)\r\n      },\r\n      // 点击 开始抽奖 按钮\r\n      handleActionStart() {\r\n        if (!this.lotteryImg) return\r\n        if (this.isRotate) return\r\n        this.$emit('draw-start')\r\n      },\r\n      // 渲染转盘\r\n      async onCreateCanvas() {\r\n        // 获取 canvas 画布\r\n        const canvasId = this.canvasId\r\n        const ctx = uni.createCanvasContext(canvasId, this)\r\n\r\n        // canvas 的宽高\r\n        let canvasW = this.higtCanvasSize\r\n        let canvasH = this.higtCanvasSize\r\n\r\n        // 根据奖品个数计算 角度\r\n        let prizeCount = this.prizeList.length\r\n        let baseAngle = Math.PI * 2 / prizeCount\r\n\r\n        // 设置字体\r\n        ctx.setFontSize(this.higtFontSize)\r\n\r\n        // 注意，开始画的位置是从0°角的位置开始画的。也就是水平向右的方向。\r\n        // 画具体内容\r\n        for (let i = 0; i < prizeCount; i++) {\r\n\t\t\t\t\tlet prizeItem = this.prizeList[i]\r\n          // 当前角度\r\n          let angle = i * baseAngle\r\n\r\n          // 保存当前画布的状态\r\n          ctx.save()\r\n          \r\n          // x => 圆弧对应的圆心横坐标 x\r\n          // y => 圆弧对应的圆心横坐标 y\r\n          // radius => 圆弧的半径大小\r\n          // startAngle => 圆弧开始的角度，单位是弧度\r\n          // endAngle => 圆弧结束的角度，单位是弧度\r\n          // anticlockwise(可选) => 绘制方向，true 为逆时针，false 为顺时针\r\n          \r\n          ctx.beginPath()\r\n          // 外圆\r\n          ctx.arc(canvasW * 0.5, canvasH * 0.5, this.outsideRadius, angle, angle + baseAngle, false)\r\n          // 内圆\r\n          ctx.arc(canvasW * 0.5, canvasH * 0.5, this.insideRadius, angle + baseAngle, angle, true)\r\n          \r\n          // 每个奖品区块背景填充颜色\r\n          if (this.colors.length === 2) {\r\n            ctx.setFillStyle(this.colors[i % 2])\r\n          } else {\r\n            ctx.setFillStyle(this.colors[i])\r\n          }\r\n          // 填充颜色\r\n          ctx.fill()\r\n          \r\n          // 开启描边\r\n          if (this.stroked) {\r\n            // 设置描边颜色\r\n            ctx.setStrokeStyle(`${this.strokeColor}`)\r\n            // 描边\r\n            ctx.stroke()\r\n          }\r\n\r\n          // 开始绘制奖品内容\r\n          // 重新映射画布上的 (0,0) 位置\r\n          let translateX = canvasW * 0.5 + Math.cos(angle + baseAngle / 2) * this.textDistance\r\n          let translateY = canvasH * 0.5 + Math.sin(angle + baseAngle / 2) * this.textDistance\r\n          ctx.translate(translateX, translateY)\r\n\r\n          // 绘制奖品名称\r\n          ctx.setFillStyle(this.strFontColor)\r\n          let rewardName = this.strLimit(prizeItem[this.strKey])\r\n          \r\n          // rotate方法旋转当前的绘图，因为文字是和当前扇形中心线垂直的\r\n          ctx.rotate(angle + (baseAngle / 2) + (Math.PI / 2))\r\n\r\n          // 设置文本位置并处理换行\r\n          if (this.strDirection === 'horizontal') {\r\n            // 是否需要换行\r\n            if (rewardName && this.prizeNameDrawed) {\r\n              let realLen = clacTextLen(rewardName).realLen\r\n              let isLineBreak = realLen > this.strLineLen\r\n              if (isLineBreak) {\r\n                // 获得多行文本数组\r\n                let firstText = ''\r\n                let lastText = ''\r\n                let firstCount = 0\r\n                for (let j = 0; j < rewardName.length; j++) {\r\n                  firstCount += clacTextLen(rewardName[j]).byteLen\r\n                  if (firstCount <= (this.strLineLen * 2)) {\r\n                    firstText += rewardName[j]\r\n                  } else {\r\n                    lastText += rewardName[j]\r\n                  }\r\n                }\r\n                rewardName = firstText + ',' + lastText\r\n                let rewardNames = rewardName.split(',')\r\n                // 循环文本数组，计算每一行的文本宽度\r\n                for (let j = 0; j < rewardNames.length; j++) {\r\n                  if (ctx.measureText && ctx.measureText(rewardNames[j]).width > 0) {\r\n                    // 文本的宽度信息\r\n                    let tempStrSize = ctx.measureText(rewardNames[j])\r\n                    let tempStrWidth = -(tempStrSize.width / 2).toFixed(2)\r\n                    ctx.fillText(rewardNames[j], tempStrWidth, j * this.higtHeightMultiple)\r\n                  } else {\r\n                    this.measureText = rewardNames[j]\r\n                    \r\n                    // 等待页面重新渲染\r\n                    await this.$nextTick()\r\n                    \r\n                    let textWidth = await this.getTextWidth()\r\n                    let tempStrWidth = -(textWidth / 2).toFixed(2)\r\n                    ctx.fillText(rewardNames[j], tempStrWidth, j * this.higtHeightMultiple)\r\n                    // console.log(rewardNames[j], textWidth, i)\r\n                  }\r\n                }\r\n              } else {\r\n                if (ctx.measureText && ctx.measureText(rewardName).width > 0) {\r\n                  // 文本的宽度信息\r\n                  let tempStrSize = ctx.measureText(rewardName)\r\n                  let tempStrWidth = -(tempStrSize.width / 2).toFixed(2)\r\n                  ctx.fillText(rewardName, tempStrWidth, 0)\r\n                } else {\r\n                  this.measureText = rewardName\r\n                  \r\n                  // 等待页面重新渲染\r\n                  await this.$nextTick()\r\n                  \r\n                  let textWidth = await this.getTextWidth()\r\n                  let tempStrWidth = -(textWidth / 2).toFixed(2)\r\n                  ctx.fillText(rewardName, tempStrWidth, 0)\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            let rewardNames = rewardName.split('')\r\n            for (let j = 0; j < rewardNames.length; j++) {\r\n              if (ctx.measureText && ctx.measureText(rewardNames[j]).width > 0) {\r\n                // 文本的宽度信息\r\n                let tempStrSize = ctx.measureText(rewardNames[j])\r\n                let tempStrWidth = -(tempStrSize.width / 2).toFixed(2)\r\n                ctx.fillText(rewardNames[j], tempStrWidth, j * this.higtHeightMultiple)\r\n              } else {\r\n                this.measureText = rewardNames[j]\r\n                \r\n                // 等待页面重新渲染\r\n                await this.$nextTick()\r\n                \r\n                let textWidth = await this.getTextWidth()\r\n                let tempStrWidth = -(textWidth / 2).toFixed(2)\r\n                ctx.fillText(rewardNames[j], tempStrWidth, j * this.higtHeightMultiple)\r\n                // console.log(rewardNames[j], textWidth, i)\r\n              }\r\n            }\r\n          }\r\n          \r\n\r\n          // 绘制奖品图片，文字竖向展示时，不支持图片展示\r\n          if (prizeItem.image && this.strDirection !== 'vertical') {\r\n\t\t\t\t\t\t// App-Android平台 系统 webview 更新到 Chrome84+ 后 canvas 组件绘制本地图像 uni.canvasToTempFilePath 会报错\r\n\t\t\t\t\t\t// 统一将图片处理成 base64\r\n\t\t\t\t\t\t// https://ask.dcloud.net.cn/question/103303\r\n\t\t\t\t\t\tlet reg = /^(https|http)/g\r\n\t\t\t\t\t\t// 处理远程图片\r\n\t\t\t\t\t\tif (reg.test(prizeItem.image)) {\r\n              let platformTips = ''\r\n              // #ifdef APP-PLUS\r\n\t\t\t\t\t\t\tplatformTips = ''\r\n              // #endif\r\n              // #ifdef MP\r\n\t\t\t\t\t\t\tplatformTips = '需要处理好下载域名的白名单问题，'\r\n              // #endif\r\n              // #ifdef H5\r\n\t\t\t\t\t\t\tplatformTips = '需要处理好跨域问题，'\r\n              // #endif\r\n\t\t\t\t\t\t\tconsole.warn(`###当前数据列表中的奖品图片为网络图片，${platformTips}开始尝试下载图片...###`)\r\n\t\t\t\t\t\t\tlet res = await downloadFile(prizeItem.image)\r\n\t\t\t\t\t\t\tconsole.log('处理远程图片', res)\r\n\t\t\t\t\t\t\tif (res.ok) {\r\n\t\t\t\t\t\t\t\tlet tempFilePath = res.tempFilePath\r\n\t\t\t\t\t\t\t\t// #ifndef MP\r\n\t\t\t\t\t\t\t\tprizeItem.image = await pathToBase64(tempFilePath)\r\n\t\t\t\t\t\t\t\t// #endif\r\n\t\t\t\t\t\t\t\t// #ifdef MP\r\n\t\t\t\t\t\t\t\tprizeItem.image = tempFilePath\r\n\t\t\t\t\t\t\t\t// #endif\r\n\t\t\t\t\t\t\t} else {\r\n                this.handlePrizeImgSuc({\r\n                  ok: false,\r\n                  data: res.data,\r\n                  msg: res.msg\r\n                })\r\n              }\r\n\t\t\t\t\t\t} else {\r\n              console.log('处理非远程图片', prizeItem.image)\r\n\t\t\t\t\t\t\t// #ifndef MP\r\n              if (prizeItem.image.indexOf(';base64,') === -1) {\r\n                prizeItem.image = await pathToBase64(prizeItem.image)\r\n              }\r\n\t\t\t\t\t\t\t// #endif\r\n\t\t\t\t\t\t}\r\n            \r\n            let prizeImageX = -(this.imgWidth * systemInfo.pixelRatio / 2)\r\n            let prizeImageY = this.imgMarginStr * systemInfo.pixelRatio\r\n            let prizeImageW = this.imgWidth * systemInfo.pixelRatio\r\n            let prizeImageH = this.imgHeight * systemInfo.pixelRatio\r\n            ctx.drawImage(prizeItem.image, prizeImageX, prizeImageY, prizeImageW, prizeImageH)\r\n          }\r\n\r\n          ctx.restore()\r\n        }\r\n\r\n        // 保存绘图并导出图片\r\n        ctx.draw(true, () => {\r\n          let drawTimer = setTimeout(() => {\r\n            clearTimeout(drawTimer)\r\n            drawTimer = null\r\n\r\n            // #ifdef MP-ALIPAY\r\n            ctx.toTempFilePath({\r\n              destWidth: this.canvasWidth * systemInfo.pixelRatio,\r\n              destHeight: this.canvasHeight * systemInfo.pixelRatio,\r\n              success: (res) => {\r\n                // console.log(res.apFilePath)\r\n                this.handlePrizeImg({\r\n\t\t\t\t\t\t\t\t\tok: true,\r\n\t\t\t\t\t\t\t\t\tdata: res.apFilePath,\r\n\t\t\t\t\t\t\t\t\tmsg: '画布导出生成图片成功'\r\n\t\t\t\t\t\t\t\t})\r\n              },\r\n\t\t\t\t\t\t\tfail: (err) => {\r\n                this.handlePrizeImg({\r\n\t\t\t\t\t\t\t\t\tok: false,\r\n\t\t\t\t\t\t\t\t\tdata: err,\r\n\t\t\t\t\t\t\t\t\tmsg: '画布导出生成图片失败'\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n            })\r\n            // #endif\r\n            \r\n            // #ifndef MP-ALIPAY\r\n            uni.canvasToTempFilePath({\r\n              canvasId: this.canvasId,\r\n              success: (res) => {\r\n                // 在 H5 平台下，tempFilePath 为 base64\r\n                // console.log(res.tempFilePath)\r\n                this.handlePrizeImg({\r\n\t\t\t\t\t\t\t\t\tok: true,\r\n\t\t\t\t\t\t\t\t\tdata: res.tempFilePath,\r\n\t\t\t\t\t\t\t\t\tmsg: '画布导出生成图片成功'\r\n\t\t\t\t\t\t\t\t})\r\n              },\r\n\t\t\t\t\t\t\tfail: (err) => {\r\n                this.handlePrizeImg({\r\n\t\t\t\t\t\t\t\t\tok: false,\r\n\t\t\t\t\t\t\t\t\tdata: err,\r\n\t\t\t\t\t\t\t\t\tmsg: '画布导出生成图片失败'\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n            }, this)\r\n            // #endif\r\n          }, 500)\r\n        })\r\n      },\r\n      // 处理导出的图片\r\n      handlePrizeImg(res) {\r\n\t\t\t\tif (res.ok) {\r\n\t\t\t\t\tlet data = res.data\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!this.canvasCached) {\r\n\t\t\t\t\t\tthis.lotteryImg = data\r\n\t\t\t\t\t\tthis.handlePrizeImgSuc(res)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// #ifndef H5\r\n\t\t\t\t\tif (this.isCacheImg) {\r\n\t\t\t\t\t\tuni.getSavedFileList({\r\n\t\t\t\t\t\t\tsuccess: (sucRes) => {\r\n\t\t\t\t\t\t\t\tlet fileList = sucRes.fileList\r\n\t\t\t\t\t\t\t\t// console.log('getSavedFileList Cached', fileList)\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tlet cached = false\r\n                \r\n                if (fileList.length) {\r\n                  for (let i = 0; i < fileList.length; i++) {\r\n                  \tlet item = fileList[i]\r\n                  \tif (item.filePath === data) {\r\n                  \t\tcached = true\r\n                  \t\tthis.lotteryImg = data\r\n                  \t\t\r\n                  \t\tconsole.info('经查，本地缓存中存在的转盘图可用，本次将不再绘制转盘')\r\n                  \t\tthis.handlePrizeImgSuc(res)\r\n                  \t\tbreak\r\n                  \t}\r\n                  }\r\n                }\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (!cached) {\r\n\t\t\t\t\t\t\t\t\tconsole.info('经查，本地缓存中存在的转盘图不可用，需要重新初始化转盘绘制')\r\n\t\t\t\t\t\t\t\t\tthis.initCanvasDraw()\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tfail: (err) => {\r\n\t\t\t\t\t\t\t\tthis.initCanvasDraw()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tuni.saveFile({\r\n\t\t\t\t\t\t\ttempFilePath: data,\r\n\t\t\t\t\t\t\tsuccess: (sucRes) => {\r\n\t\t\t\t\t\t\t\tlet filePath = sucRes.savedFilePath\r\n\t\t\t\t\t\t\t\t// console.log('saveFile', filePath)\r\n\t\t\t\t\t\t\t\tsetStore(`${this.canvasId}LotteryImg`, filePath)\r\n\t\t\t\t\t\t\t\tthis.lotteryImg = filePath\r\n\t\t\t\t\t\t\t\tthis.handlePrizeImgSuc({\r\n\t\t\t\t\t\t\t\t\tok: true,\r\n\t\t\t\t\t\t\t\t\tdata: filePath,\r\n\t\t\t\t\t\t\t\t\tmsg: '画布导出生成图片成功'\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tfail: (err) => {\r\n\t\t\t\t\t\t\t\tthis.handlePrizeImg({\r\n\t\t\t\t\t\t\t\t\tok: false,\r\n\t\t\t\t\t\t\t\t\tdata: err,\r\n\t\t\t\t\t\t\t\t\tmsg: '画布导出生成图片失败'\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// #endif\r\n\t\t\t\t\t// #ifdef H5\r\n\t\t\t\t\tsetStore(`${this.canvasId}LotteryImg`, data)\r\n\t\t\t\t\tthis.lotteryImg = data\r\n\t\t\t\t\tthis.handlePrizeImgSuc(res)\r\n          \r\n          // console info\r\n          let consoleText = this.isCacheImg ? '缓存' : '导出'\r\n          console.info(`当前为 H5 端，使用${consoleText}中的 base64 图`)\r\n\t\t\t\t\t// #endif\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('处理导出的图片失败', res)\r\n\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t\t// #ifdef H5\r\n\t\t\t\t\tconsole.error('###当前为 H5 端，下载网络图片需要后端配置允许跨域###')\r\n\t\t\t\t\t// #endif\r\n\t\t\t\t\t// #ifdef MP\r\n\t\t\t\t\tconsole.error('###当前为小程序端，下载网络图片需要配置域名白名单###')\r\n\t\t\t\t\t// #endif\r\n\t\t\t\t}\r\n      },\r\n\t\t\t// 处理图片完成\r\n\t\t\thandlePrizeImgSuc (res) {\r\n\t\t\t\tuni.hideLoading()\r\n\t\t\t\tthis.$emit('finish', {\r\n\t\t\t\t\tok: res.ok,\r\n\t\t\t\t\tdata: res.data,\r\n\t\t\t\t\tmsg: res.ok ? this.successMsg : this.failMsg\r\n\t\t\t\t})\r\n        this.almostLotteryTip = res.ok ? this.successMsg : this.failMsg\r\n\t\t\t},\r\n      // 兼容 app 端不支持 ctx.measureText\r\n      // 已知问题：初始绘制时，低端安卓机 平均耗时 2s\r\n      // hbx 2.8.12+ 已在 app 端支持\r\n      getTextWidth() {\r\n        console.warn('正在采用兼容方式获取文本的 size 信息，虽然没有任何问题，如果可以，请将此 systemInfo 及 hbx 版本号 反馈给作者', systemInfo)\r\n        let query = uni.createSelectorQuery().in(this)\r\n        let nodesRef = query.select('.almost-lottery__measureText')\r\n        return new Promise((resolve, reject) => {\r\n          nodesRef.fields({\r\n            size: true,\r\n          }, (res) => {\r\n            resolve(res.width)\r\n          }).exec()\r\n        })\r\n      },\r\n      // 处理文字溢出\r\n      strLimit(value) {\r\n        let maxLength = this.strMaxLen\r\n        if (!value || !maxLength) return value\r\n        return clacTextLen(value).realLen > maxLength ? value.slice(0, maxLength - 1) + '..' : value\r\n      },\r\n\t\t\t// 检查本地缓存中是否存在转盘图\r\n\t\t\tcheckCacheImg () {\r\n\t\t\t\tconsole.log('检查本地缓存中是否存在转盘图')\r\n\t\t\t\t// 检查是否已有缓存的转盘图\r\n\t\t\t\t// 检查是否与本次奖品数据相同\r\n\t\t\t\tthis.oldLotteryImg = getStore(`${this.canvasId}LotteryImg`)\r\n\t\t\t\tlet oldPrizeList = getStore(`${this.canvasId}PrizeList`)\r\n\t\t\t\tlet newPrizeList = JSON.stringify(this.prizeList)\r\n\t\t\t\tif (this.oldLotteryImg) {\r\n\t\t\t\t\tif (oldPrizeList === newPrizeList) {\r\n\t\t\t\t\t\tconsole.log(`经查，本地缓存中存在转盘图 => ${this.oldLotteryImg}`)\r\n\t\t\t\t\t\tthis.isCacheImg = true\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconsole.log('需要继续判断这张缓存图是否可用')\r\n\t\t\t\t\t\tthis.handlePrizeImg({\r\n\t\t\t\t\t\t\tok: true,\r\n\t\t\t\t\t\t\tdata: this.oldLotteryImg,\r\n\t\t\t\t\t\t\tmsg: '画布导出生成图片成功'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconsole.log('经查，本地缓存中不存在转盘图')\r\n\t\t\t\tthis.initCanvasDraw()\r\n\t\t\t},\r\n      // 初始化绘制\r\n      initCanvasDraw () {\r\n\t\t\t\tconsole.log('开始初始化转盘绘制')\r\n\t\t\t\tthis.isCacheImg = false\r\n\t\t\t\tthis.lotteryImg = ''\r\n\t\t\t\tclearStore(`${this.canvasId}LotteryImg`)\r\n        setStore(`${this.canvasId}PrizeList`, this.prizeList)\r\n        this.onCreateCanvas()\r\n      }\r\n    },\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        let stoTimer = setTimeout(() => {\r\n          clearTimeout(stoTimer)\r\n          stoTimer = null\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this.canvasCached) {\r\n\t\t\t\t\t\tthis.checkCacheImg()\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.onCreateCanvas()\r\n\t\t\t\t\t}\r\n          this.transitionDuration = this.duration\r\n        }, 50)\r\n      })\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .almost-lottery {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n\t.almost-lottery__wrap {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\t}\r\n\r\n  .almost-lottery__action,\r\n  .almost-lottery__bg,\r\n  .almost-lottery__canvas {\r\n    position: absolute;\r\n  }\r\n\r\n  .almost-lottery__canvas {\r\n    left: -9999px;\r\n    opacity: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .almost-lottery__canvas-img,\r\n  .almost-lottery__action-bg {\r\n\t\tdisplay: block;\r\n    transition: transform cubic-bezier(.34, .12, .05, .95);\r\n  }\r\n\r\n  .almost-lottery__tip {\r\n    color: #FFFFFF;\r\n    font-size: 24rpx;\r\n    text-align: center;\r\n  }\r\n  \r\n  .almost-lottery__measureText {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    white-space: nowrap;\r\n    font-size: 12px;\r\n    opacity: 0;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-2!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-5!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./almost-lottery.vue?vue&type=style&index=0&id=34b92f46&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-2!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-5!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./almost-lottery.vue?vue&type=style&index=0&id=34b92f46&lang=scss&scoped=true&\""],"sourceRoot":""}